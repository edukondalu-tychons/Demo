require('dotenv').config();
const express = require('express');
const nodemailer = require('nodemailer');
const bodyParser = require('body-parser');
const cors = require('cors');

const app = express();
const PORT = process.env.PORT || 5000;

app.use(cors());
app.use(bodyParser.json());

app.post('/send-email', async (req, res) => {
  const { firstName, lastName, contactPhone, contactEmail, description } = req.body;

  // Basic validation
  if (!firstName || !lastName || !contactPhone || !contactEmail) {
    return res.status(400).json({ message: 'Missing required fields' });
  }

if (!/^[\d\s()+-]{7,20}$/.test(contactPhone)) {
  return res.status(400).json({ message: 'Invalid phone number format' });
}


  // ✅ Accept all valid email addresses
  if (!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(contactEmail)) {
  return res.status(400).json({ message: 'Email must be a valid email address' });
}

  if (description && description.length > 500) {
    return res.status(400).json({ message: 'Description must be less than 500 characters' });
  }

  try {
    const transporter = nodemailer.createTransport({
      host: process.env.EMAIL_HOST,
      port: parseInt(process.env.EMAIL_PORT),
      secure: false,
      auth: {
        user: process.env.EMAIL_USER,
        pass: process.env.EMAIL_PASS
      },
      tls: {
        rejectUnauthorized: false
      }
    });

    await transporter.verify();
    console.log("✅ Transporter verified");

    const formattedDescription = description ? description.replace(/\n/g, '<br>') : '—';

    const mailOptions = {
      from: process.env.EMAIL_USER,
      to: 'abdulmajeed.rk@tychons.com',
      subject: '📬 Contact Form',
      html: `
        <div style="background-color: #f4f6f8; padding: 40px 0; font-family: 'Segoe UI', sans-serif;">
          <div style="max-width: 600px; margin: auto; background: #ffffff; border-radius: 8px; box-shadow: 0 4px 12px rgba(0,0,0,0.1); padding: 30px;">
            <div style="text-align: center; margin-bottom: 30px;">
              <h2 style="color: #2b6cb0; margin: 0;">New Contact Form Submission</h2>
              <p style="color: #555; font-size: 14px;">You’ve received a new inquiry from your website.</p>
            </div>
            <table style="width: 100%; border-collapse: collapse; font-size: 16px;">
              <tr>
                <td style="padding: 12px 8px; font-weight: 600; background: #f0f4f8;">First Name:</td>
                <td style="padding: 12px 8px;">${firstName}</td>
              </tr>
              <tr>
                <td style="padding: 12px 8px; font-weight: 600; background: #f0f4f8;">Last Name:</td>
                <td style="padding: 12px 8px;">${lastName}</td>
              </tr>
              <tr>
                <td style="padding: 12px 8px; font-weight: 600; background: #f0f4f8;">Phone Number:</td>
                <td style="padding: 12px 8px;">${contactPhone}</td>
              </tr>
              <tr>
                <td style="padding: 12px 8px; font-weight: 600; background: #f0f4f8;">Email Address:</td>
                <td style="padding: 12px 8px;">${contactEmail}</td>
              </tr>
              <tr>
                <td style="padding: 12px 8px; font-weight: 600; background: #f0f4f8;">Description:</td>
                <td style="padding: 12px 8px;">${formattedDescription}</td>
              </tr>
            </table>
            <div style="text-align: center; color: #999; font-size: 13px; margin-top: 40px;">
              <p>This message was automatically generated by your website contact form.</p>
            </div>
          </div>
        </div>
      `
    };

    await transporter.sendMail(mailOptions);
    res.status(200).json({ message: '✅ Email sent successfully' });

  } catch (error) {
    console.error('❌ Failed to send email:', error);
    res.status(500).json({ message: '❌ Failed to send email', error: error.message });
  }
});

app.listen(PORT, () => {
 // console.log(`🚀 Server is running on http://localhost:${PORT}`);
});
